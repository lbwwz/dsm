<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!--设置session过期时间 单位分钟-->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!--指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:config/spring-applicationContext.xml
        </param-value>
    </context-param>


    <!-- Spring配置 ======================================-->
    <!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- 配置Spring上下文监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.dsm.common.listener.SessionManagerListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.dsm.common.listener.ContextRefreshedListener</listener-class>
    </listener>


    <!-- Spring MVC配置 ====================================== -->
    <!-- 设置servlet的请求编码 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 设置servlet编码结束 -->

    <!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
    <!-- 这里filter-name必须对应 spring-applicationContext.xml 中定义的<bean id="shiroFilter"/> -->
    <!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
    <!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--设置 request,response 的 threadLocal环境-->
    <filter>
        <filter-name>httpContextFilter</filter-name>
        <filter-class>com.dsm.common.filter.HttpContextFilter</filter-class>
        <!--设置 xss 校验的排除请求-->
        <init-param>
            <param-name>XSS_exclude</param-name>
            <param-value>/;/js/*;/css/*;/images/*;/fonts/*;/font-awesome/*;/front-lib/*;/bower_components/*;/fileBase/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>httpContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--设置spring-mvc映射-->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/spring-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file></welcome-file>
    </welcome-file-list>

    <!--<error-page>-->
    <!--<error-code>405</error-code>-->
    <!--<location>/WEB-INF/405.html</location>-->
    <!--</error-page>-->
    <!--<error-page>-->
    <!--<error-code>404</error-code>-->
    <!--<location>/WEB-INF/404.jsp</location>-->
    <!--</error-page>-->
    <!--<error-page>-->
    <!--<error-code>500</error-code>-->
    <!--<location>/WEB-INF/500.jsp</location>-->
    <!--</error-page>-->
    <!--<error-page>-->
    <!--<exception-type>java.lang.Throwable</exception-type>-->
    <!--<location>/WEB-INF/500.jsp</location>-->
    <!--</error-page>-->
</web-app>