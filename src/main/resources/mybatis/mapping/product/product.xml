<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  有关商品的sql操作  -->
<mapper namespace="com.dsm.dao.IProductDao">
    <!-- 发布商品的字段映射关系 -->
    <resultMap id="productResult" type="ProductBean">
        <id column="product_id" property="productId"/>
        <result column="cat_id" property="catId"/>
        <result column="shop_id" property="shopId"/>
        <result column="brand_id" property="brandId"/>
        <result column="sort_order" property="sort"/>
        <result column="product_name" property="productName"/>
        <result column="main_img" property="mainImage"/>
        <result column="min_price" property="minPrice"/>
        <result column="max_price" property="maxPrice"/>
        <result column="product_status" property="status"/>
        <result column="is_best" property="isBest"/>
        <result column="is_new" property="isNew"/>
        <result column="is_hot" property="isHot"/>
    </resultMap>
    <!-- 商品详情信息 -->
    <resultMap id="productDetailResult" type="ProductDetail">
        <id column="product_id" property="productId"/>
        <result column="cat_id" property="catId"/>
        <result column="shop_id" property="shopId"/>
        <result column="brand_id" property="brandId"/>
        <result column="sort_order" property="sort"/>
        <result column="product_name" property="productName"/>
        <result column="detail_text" property="detailText"/>
        <result column="min_price" property="minPrice"/>
        <result column="max_price" property="maxPrice"/>
        <result column="product_status" property="status"/>
        <result column="is_best" property="isBest"/>
        <result column="is_new" property="isNew"/>
        <result column="is_hot" property="isHot"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="lastUpdateTime"/>
        <collection column="product_id" property="skuList" ofType="Sku"
                     select="com.dsm.dao.IProductSkuDao.getSkuListByProductId">
        </collection>
        <collection column="product_id" property="baseAttrsInfo" ofType="ProductDetailAttrInfo"
                    select="getProductBaseAttrInfo">
        </collection>
        <collection column="product_id" property="customerAttrsInfo" ofType="ProductDetailAttrInfo"
                    select="getProductCustomAttrInfo">
        </collection>
        <collection column="product_id" property="productImages" ofType="ProductImageItem"
                    select="getProductImageList">
        </collection>
    </resultMap>
    <!-- 详情商品的属性信息映射（基础属性和自定义属性） -->
    <resultMap id="productDetailAttrInfoResult" type="ProductDetailAttrInfo">
        <result column="baseAttr_id" property="baseAttrId"/>
        <result column="customAttr_id" property="customAttrId"/>
        <result column="product_id" property="productId"/>
        <result column="attr_id" property="attrId"/>
        <result column="attr_name" property="attrName"/>
        <result column="value_id" property="valueId"/>
        <result column="attr_value" property="attrValue"/>
        <result column="sort_order" property="sort"/>
        <result column="status" property="status"/>
    </resultMap>

    <!-- 商品图片的属性映射 -->
    <resultMap id="productImageItemResult" type="ProductImageItem">
        <id column="img_id" property="imgId"/>
        <result column="product_id" property="productId"/>
        <result column="img_url" property="imgUrl"/>
        <result column="is_main" property="isMain"/>
        <result column="sort" property="sort"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!--添加商品基本信息-->
    <insert id="addProductInfo" parameterType="ProductBean" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO
        dsm_product(cat_id, product_sn, product_name, brand_id, shop_id, price_min, price_max, main_img,
        create_time, update_time)
        VALUES
        (#{catId}, #{productSn}, #{productName}, #{brandId}, #{shopId}, #{minPrice}, #{maxPrice},
        #{mainImage}, NOW(), NOW())
    </insert>

    <!-- 添加商品图文详情信息 -->
    <insert id="addGraphicDetail" parameterType="GraphicDetail" useGeneratedKeys="true" keyProperty="detailId">
        INSERT INTO dsm_product_graphic_detail(product_id, detail_text,create_time, update_time)
        VALUES(#{productId}, #{detailText}, NOW(),  NOW())
    </insert>

    <!-- 添加商品图片列表 -->
    <insert id="addProductImageList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="imgId">
        INSERT INTO dsm_product_images(product_id, img_url,is_main, create_time) VALUES
        <foreach collection="list" separator="," item="bean">
            (#{bean.productId}, #{bean.imgUrl}, #{bean.isMain}, NOW())
        </foreach>
    </insert>

    <!--添加商品的基础属性-->
    <insert id="addProductBaseAttrList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO dsm_product_base_attr(product_id, attr_id, attr_name, value_id, attr_value,create_time, update_time)
        VALUES
        <foreach collection="list" separator="," item="bean">
            (#{bean.productId}, #{bean.attrId}, #{bean.attrName}, #{bean.valueId}, #{bean.attrValue}, NOW(), NOW())
        </foreach>
    </insert>

    <!--添加商品的自定义属性-->
    <insert id="addProductCustomAttrList" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO dsm_product_custom_attr(product_id, attr_name, attr_value,create_time, update_time)
        VALUES
        <foreach collection="list" separator="," item="bean">
            (#{bean.productId}, #{bean.attrName}, #{bean.attrValue}, NOW(), NOW())
        </foreach>
    </insert>



    <!--根据商品id查询商品基本信息-->
    <select id="getProductBaseInfoById" resultMap="productResult" parameterType="int">
        SELECT
            product_id, cat_id, product_sn, product_name, click_count, brand_id, product_number, shop_id,
            min_price, max_price, shop_price, warn_number,product_brief, main_img, product_grade, product_status,
            is_best, is_new, is_hot
        FROM vdsm_user_product_base  WHERE product_id=#{productId} AND product_status=1


    </select>

    <!--根据类目ID查询商品的基本信息列表-->
    <select id="getProductBaseInfoByCatId" resultMap="productResult" parameterType="int">
        SELECT product_id, cat_id, product_sn, product_name, click_count, brand_id, product_number, shop_id,
            price_min, price_max, shop_price, warn_number,product_brief, main_img, product_grade, product_status,
            is_best, is_new, is_hot
        FROM dsm_product  WHERE catId=#{productId} AND status=1
    </select>

    <!--按照分类分页查询商品列表（依据权重）-->
    <select id="getPageByCategoryWithWeighted" resultMap="productResult">
        SELECT a.product_id, a.cat_id, a.product_sn, a.product_name, a.click_count, a.brand_id, a.product_number, a.shop_id,
            a.price_min, a.price_max, a.shop_price, a.warn_number, a.product_brief, a.main_img, a.product_grade, a.product_status,
            a.is_best, a.is_new, a.is_hot
        FROM dsm_product a,
            (
                SELECT product_id FROM dsm_product
                WHERE dsm_product.product_status=1 AND FIND_IN_SET(cat_id,fn_getChildCatList(#{0}))
                ORDER BY fn_calculateSearchWeight(click_count,is_hot,is_new,is_best,0,#{3[0]},#{3[1]},#{3[2]},#{3[3]},#{3[4]}) DESC LIMIT #{1},#{2}
            ) b
        WHERE a.product_id=b.product_id;
    </select>

    <!--按照分类 依据商品的价格查询商品列表 -->
    <select id="getPageByCategoryByPrice" resultMap="productResult">
        SELECT * FROM vdsm_user_product_base a,
        (
            SELECT product_id FROM vdsm_user_product_base
            WHERE product_status=1 AND FIND_IN_SET(cat_id,fn_getChildCatList(#{catId}))
            ORDER BY
            <choose>
                <when test="sortType == 0">
                    min_price
                </when>
                <otherwise>
                    max_price DESC
                </otherwise>
            </choose>
            LIMIT #{start}, #{offset}

        ) b
        WHERE a.product_id=b.product_id
    </select>



    <!--查询商品详细信息-->
    <select id="getProductDetailInfo" resultMap="productDetailResult" parameterType="int">
        SELECT
            p.product_id, p.cat_id, p.product_sn, p.product_name, p.click_count, p.brand_id, p.product_number, p.shop_id,
            p.min_price, p.max_price, p.shop_price, p.warn_number,p.product_brief, p.main_img, p.product_grade, p.product_status,
            p.is_best, p.is_new, p.is_hot,d.detail_text, p.update_time,p.create_time
        FROM vdsm_user_product_base p LEFT JOIN dsm_product_graphic_detail d
        ON p.product_id=d.product_id
        HAVING p.product_id=#{productId} AND p.product_status=1;
    </select>

    <!--查询商品的基础属性-->
    <select id="getProductBaseAttrInfo" resultMap="productDetailAttrInfoResult" parameterType="int">
        SELECT baseAttr_id, product_id, attr_id, attr_name, value_id, attr_value,sort_order,create_time,update_time
        FROM dsm_product_base_attr WHERE product_id=#{productId} AND status=1;
    </select>

    <!--查询商品的自定义属性-->
    <select id="getProductCustomAttrInfo" resultMap="productDetailAttrInfoResult" parameterType="int">
        SELECT customAttr_id, product_id, attr_name, attr_value,sort_order,create_time,update_time
        FROM dsm_product_custom_attr WHERE product_id=#{productId} AND status=1
    </select>

    <!--查询商品的图片列表-->
    <select id="getProductImageList" resultMap="productImageItemResult" parameterType="int">
        SELECT * FROM dsm_product_images WHERE product_id=#{productId}
    </select>



</mapper>