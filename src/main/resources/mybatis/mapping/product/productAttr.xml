<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace必须是接口的全类名  -->
<mapper namespace="com.dsm.dao.IProductAttrDao">

    <!--ProductAttr属性别名与字段之间映射-->
    <resultMap id="productAttrResult" type="ProductAttrBean">
        <id column="attr_id" property="attrId"/>
        <result column="cat_id" property="catId"/>
        <result column="attr_name" property="attrName"/>
        <result column="attr_sort" property="attrSort"/>
        <result column="is_sale_attr" property="isSale"/>
        <result column="is_key_attr" property="isKey"/>
        <result column="is_must" property="isMust"/>
        <result column="attr_status" property="status"/>
        <collection property="attrValues" ofType="AttrValueBean" resultMap="AttrValueResult"/>
    </resultMap>

    <!--ProductAttr属性名称——别名与字段之间映射-->
    <resultMap id="ProductAttrNameResult" type="ProductAttrBean">
        <id column="attr_id" property="attrId"/>
        <result column="cat_id" property="catId"/>
        <result column="attr_name" property="attrName"/>
        <result column="attr_sort" property="attrSort"/>
        <result column="is_sale_attr" property="isSale"/>
        <result column="is_key_attr" property="isKey"/>
        <result column="is_must" property="isMust"/>
        <result column="attr_status" property="status"/>
    </resultMap>

    <!--AttrValue 属性名与字段之间的映射-->
    <resultMap id="AttrValueResult" type="AttrValueBean">

        <id column="value_id" property="valueId"/>
        <result column="name" property="valueName"/>
        <result column="attr_id" property="attrId"/>
        <result column="value_sort" property="valueSort"/>
        <result column="value_status" property="status"/>
    </resultMap>

    <!--======== 属性的相关操作 ========-->

    <!--查询品类下可用的商品可用属性信息（含属性值）-->
    <select id="getAttrByCat" resultMap="productAttrResult" parameterType="int">
        SELECT *
        FROM dsm_product_def_attribute a
        LEFT OUTER JOIN dsm_product_def_attribute_values v ON a.attr_id = v.attr_id
        WHERE a.cat_id=#{catId} AND a.attr_status=1 AND v.value_status=1
    </select>

    <!--查询品类下商品属性名（不含属性值）-->
    <select id="getAttrNameByCat" resultMap="ProductAttrNameResult" parameterType="java.util.Map">
        SELECT attr_id, cat_id, attr_name, sort_order, is_sale_attr, is_key_attr, is_must, status
        FROM dsm_product_def_attribute
        <trim prefix="WHERE" prefixOverrides="AND">
            cat_id=#{catId}
            <if test="status gte 0">
                AND attr_status=#{status}
            </if>
        </trim>
    </select>


    <!--根据类目ID查询可用的商品属性信息-->
    <select id="getUsableAttrById" resultMap="productAttrResult" parameterType="int">
        SELECT *
        FROM dsm_product_def_attribute a
        LEFT OUTER JOIN dsm_product_def_attribute_values v ON a.attr_id = v.attr_id
        WHERE a.attr_id=#{catId} AND a.attr_status=1 AND v.value_status=1
    </select>

    <!--根据ID查询商品属性名称-->
    <select id="getAttrNameById" resultMap="ProductAttrNameResult" parameterType="java.util.Map">
        SELECT attr_id, cat_id, attr_name, sort_order, is_sale_attr, is_key_attr, is_must, attr_status
        FROM dsm_product_def_attribute
        <trim prefix="WHERE" prefixOverrides="AND">
            attr_id=#{attrId}
            <if test="status gte 0">
                AND attr_status=#{status}
            </if>
        </trim>
    </select>

    <select id="getKeyAttrInfoList" resultMap="productAttrResult" parameterType="int">
        SELECT *
        FROM dsm_product_def_attribute a
        LEFT OUTER JOIN dsm_product_def_attribute_values v ON a.attr_id = v.attr_id
        WHERE a.is_key_attr=1 AND a.cat_id=#{catId}
        ORDER BY attr_sort DESC
    </select>

    <!--品类下添加一组商品属性-->
    <insert id="addAttr"  parameterType="java.util.List" useGeneratedKeys="true" keyProperty="attrId">
        INSERT INTO dsm_product_def_attribute(attr_name, cat_id, is_sale_attr, is_key_attr, is_must)
        VALUES
        <foreach collection="list" item="bean" index="index" separator="," >
            (#{bean.attrName},#{bean.catId},#{bean.isSale},#{bean.isKey},#{bean.isMust})
        </foreach>
    </insert>

    <!--更新品类商品属性-->
    <update id="updateAttr" parameterType="ProductAttrBean">
        UPDATE dsm_product_def_attribute
        SET attr_name=#{attrName}, is_key_attr=#{isKey}, is_must=#{isMust}
        WHERE attr_id=#{attrId}
    </update>

    <!--更改品类下一组商品属性可用状态-->
    <update id="changeAttrStatus" parameterType="int">
        UPDATE dsm_product_def_attribute
        SET attr_status=1-attr_status
        WHERE attr_id=#{attrId}
    </update>

    <!--======= 属性值操作 =========-->

    <!--查询品类下商品属性的属性值-->
    <select id="getValuesByAttrId" resultMap="AttrValueResult" parameterType="java.util.Map">
        SELECT *
        FROM dsm_product_def_attribute_values
        <trim prefix="WHERE" prefixOverrides="AND">
            attr_id=#{attrId}
            <if test="status gte 0">
                AND status=#{status}
            </if>
        </trim>
    </select>

    <!--品类下根据属性值ID查询对应属性值信息-->
    <select id="getValueById" resultMap="AttrValueResult" parameterType="AttrValueBean">
        SELECT *
        FROM dsm_product_def_attribute_values
        <trim prefix="WHERE" prefixOverrides="AND">
            value_id=#{valueId}
            <if test="status gte 0">
                AND status=#{status}
            </if>
        </trim>
    </select>

    <!--品类下添加一组商品属性值-->
    <insert id="addAttrValues"  parameterType="java.util.List" useGeneratedKeys="true" keyProperty="attrId">
        INSERT INTO dsm_product_def_attribute_values(name, attr_id, status, edit_date)
        VALUES
        <foreach collection="list" item="bean" index="index" separator="," >
            (#{bean.valueName},#{bean.attrId},#{bean.status},NOW())
        </foreach>
    </insert>

    <!--品类下更新商品属性值-->
    <update id="updateAttrValue" parameterType="AttrValueBean">
        UPDATE dsm_product_def_attribute_values
        SET name=#{valueName}
        WHERE value_id=#{valueId}
    </update>

    <!--品类下更改一组商品属性值可用状态-->
    <update id="changeValueStatus" parameterType="int">
        UPDATE dsm_product_def_attribute_values
        SET status=1-status
        WHERE value_id=#{valueId}
    </update>

</mapper>